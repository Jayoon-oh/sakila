<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.ActorMapper">
<!-- /on/filmOne : searchName검색결과 -->
	<select id="selectActorListByActor"
			parameterType="String"
			resultType="com.example.sakila.vo.Actor">
		SELECT 
			actor_id actorId
			, first_name firstName
			, last_name lastName
		FROM actor
		WHERE first_name LIKE CONCAT('%', #{searchName}, '%')
		OR last_name LIKE CONCAT('%', #{searchName}, '%')
	</select>
	
	<delete id="deleteActor" parameterType="int">
		DELETE FROM actor
		WHERE actor_id = #{actorId}
	
	</delete>
	
	
	<update id="updateActor" parameterType="com.example.sakila.vo.Actor">
		UPDATE actor
		<set>
			<if test="firstName != null">
					first_name = #{firstName}
			</if>
			<if test="lastName != null">
					last_name = #{lastName}
			</if>
		</set>
		WHERE actor_id = #{actorId}
	</update>
							
	
	<!-- /on/filmOne-->
	<select id="selectActorListByFilm"
			parameterType="int"
			resultType="com.example.sakila.vo.Actor">
			
			SELECT 
				a.actor_id actorId
				, a.first_name firstName
				, a.last_name lastName
			FROM film_actor fa INNER JOIN actor a
			ON fa.actor_id = a.actor_id
			WHERE fa.actor_id = #{actorId}
	
	</select>
	
	<select id="selectActorFileListByActor"
				parameterType="int"
				resultType="com.example.sakila.vo.ActorFile">
		SELECT 
			actor_file_id actorFileId 
			, actor_id actorId
			, originname
			, filename
			, ext
			, type
			, size
			, createdate
		FROM file_actor
		WHERE actor_id = #{actorId};
	
	</select> <!-- 두번째 쿼리 -->

	<select id="selectActorOne"
			parameterType = "int"
			resultType = "com.example.sakila.vo.Actor">
		SELECT
			actor_id actorId
			, first_name firstName
			, last_name lastName
			, last_update lastUpdate
		FROM actor
		WHERE actor_Id = #{actorId}
	</select>

	<!-- 전체 레코드 수 반환하는 SQL / 페이징 -->
 	<select id="selectTotalCount" resultType="int">
        SELECT COUNT(*) FROM actor
    </select>

	<!-- 추가된 검색어에 따라 전체 레코드 수 반환하는 SQL -->
	<select id="selectTotalCountBySearch" resultType="int">
        SELECT COUNT(*) FROM actor
        <where>
            <if test="searchWord != null and searchWord != ''">
                (first_name LIKE CONCAT('%', #{searchWord}, '%')
                OR last_name LIKE CONCAT('%', #{searchWord}, '%'))
            </if>
        </where>
    </select>

	<select id="selectActorList"
			parameterType="Map"
			resultType="com.example.sakila.vo.Actor">
		SELECT 
			actor_id actorId
			, first_name firstName
			, last_name lastName
		FROM actor
		<where>
			<if test="searchWord != null">
				first_name LIKE CONCAT('%', #{searchWord}, '%')
				OR last_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		ORDER BY first_name ASC
		LIMIT #{beginRow}, #{rowPerPage}
	
	
	</select>

	<insert id="insertActor" parameterType="com.example.sakila.vo.Actor">
		<selectKey resultType="int" keyProperty="actorId" order="AFTER">
			select LAST_INSERT_ID()	
		</selectKey>
	
		INSERT INTO actor (
			first_name, last_name
		) VALUES (
			#{firstName}, #{lastName}
		)
	</insert>
</mapper>